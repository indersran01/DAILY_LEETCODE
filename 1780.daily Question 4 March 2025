1780. Check if Number is a Sum of Powers of Three

Given an integer n, return true if it is possible to represent n as the sum of distinct powers of three. Otherwise, return false.

An integer y is a power of three if there exists an integer x such that y == 3x.

 

Example 1:

Input: n = 12
Output: true
Explanation: 12 = 31 + 32
Example 2:

Input: n = 91
Output: true
Explanation: 91 = 30 + 32 + 34
Example 3:

Input: n = 21
Output: false
 

Constraints:

1 <= n <= 107

code:
class Solution {
    public boolean solve(ArrayList<Integer>three,int i,int n)
    {
        if(i>=three.size())
        {
            if(n==0)
            return true;
            return false;

        }
        if(n==0)
        return true;

        return solve(three,i+1,n-three.get(i))||solve(three,i+1,n);
    }
    public boolean checkPowersOfThree(int n) 
    {
        
        ArrayList<Integer>three=new ArrayList<>();
        three.add(1);
        int ele=1;
        while(ele<=10000000)
        {
            ele*=3;
            three.add(ele);
        }
        return solve(three,0,n);
    }
}
